// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using weatherescu_test_2.Models;

#nullable disable

namespace weatherescu_test_2.Migrations
{
    [DbContext(typeof(WeatherContext))]
    [Migration("20250326194550_SeedCities")]
    partial class SeedCities
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("weatherescu_test_2.Models.City", b =>
                {
                    b.Property<int>("CityID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CityID"));

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CityID");

                    b.ToTable("Cities");

                    b.HasData(
                        new
                        {
                            CityID = 1,
                            Country = "Romania",
                            Name = "Craiova"
                        },
                        new
                        {
                            CityID = 2,
                            Country = "Romania",
                            Name = "Bucuresti"
                        },
                        new
                        {
                            CityID = 3,
                            Country = "Romania",
                            Name = "Braila"
                        },
                        new
                        {
                            CityID = 4,
                            Country = "Romania",
                            Name = "Cluj-Napoca"
                        },
                        new
                        {
                            CityID = 5,
                            Country = "Romania",
                            Name = "Iasi"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
